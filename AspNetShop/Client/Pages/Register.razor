@page "/acc/register"
@inject HttpClient Http
@inject ILocalStorageService LocalStore
@inject NavigationManager navMan
@using System.Text;
@using System.Security.Cryptography;
<h3>Регистрация</h3>

<EditForm Model="model" OnSubmit=@HandleSubmit class="login-form">
    <div class="error-message" hidden="@(errorMessage == "")">@errorMessage</div>
    <label for="Login">Логин:</label>
    <InputText id="Login" @bind-Value="model.UserName"></InputText>
    <label for="FirstName">Имя:</label>
    <InputText id="FirstName" @bind-Value="model.FirstName"></InputText>
    <label for="SecondName">Фамилия:</label>
    <InputText id="SecondName" @bind-Value="model.SecondName"></InputText>
    <label for="Email">Почта:</label>
    <InputText id="Email" @bind-Value="model.Email"></InputText>
    <label for="Password">Пароль:</label>

    <InputText id="Password" @bind-Value="model.Password" type="password"></InputText>
    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private AspNetShop.Shared.Form.Register model = new AspNetShop.Shared.Form.Register();
    private string errorMessage = "";
    private async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("/account/register", model);
        var answer = await response.Content.ReadFromJsonAsync<List<string>>();
        if(answer[0] == "OK")
        {
            var token = answer[1];
            await LocalStore.SetItemAsync("JWT", token);
            navMan.NavigateTo("/");
        }
        else
        {
            errorMessage = answer[1];
        }
    }

}
